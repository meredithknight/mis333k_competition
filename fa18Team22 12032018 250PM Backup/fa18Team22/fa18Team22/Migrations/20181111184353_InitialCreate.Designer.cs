// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using fa18Team22.DAL;

namespace fa18Team22.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20181111184353_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("fa18Team22.Models.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<decimal>("AvgRating");

                    b.Property<string>("BookDetail");

                    b.Property<int?>("GenreID");

                    b.Property<int>("Inventory");

                    b.Property<int?>("ProcurementID");

                    b.Property<DateTime>("PublishDate");

                    b.Property<int>("ReplenishMinimum");

                    b.Property<decimal>("SalesPrice");

                    b.Property<string>("Title");

                    b.Property<int>("UniqueID");

                    b.HasKey("BookID");

                    b.HasIndex("GenreID");

                    b.HasIndex("ProcurementID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("fa18Team22.Models.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenreName");

                    b.HasKey("GenreID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("fa18Team22.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomerEmailAddress");

                    b.Property<DateTime>("OrderDate");

                    b.Property<int?>("PromoID");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerEmailAddress");

                    b.HasIndex("PromoID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("fa18Team22.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookID");

                    b.Property<int?>("OrderID");

                    b.Property<decimal>("Price");

                    b.Property<int>("Quantity");

                    b.HasKey("OrderDetailID");

                    b.HasIndex("BookID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("fa18Team22.Models.Procurement", b =>
                {
                    b.Property<int>("ProcurementID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Price");

                    b.Property<DateTime>("ProcurementDate");

                    b.Property<short>("Quantity");

                    b.HasKey("ProcurementID");

                    b.ToTable("Procurements");
                });

            modelBuilder.Entity("fa18Team22.Models.Promo", b =>
                {
                    b.Property<int>("PromoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DiscountAmount");

                    b.Property<string>("PromoCode");

                    b.Property<bool>("ShippingWaiver");

                    b.HasKey("PromoID");

                    b.ToTable("Promos");
                });

            modelBuilder.Entity("fa18Team22.Models.Review", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookID");

                    b.Property<decimal>("Rating");

                    b.Property<string>("ReviewText");

                    b.Property<string>("UserEmailAddress");

                    b.Property<string>("UserEmailAddress1");

                    b.HasKey("ReviewID");

                    b.HasIndex("BookID");

                    b.HasIndex("UserEmailAddress");

                    b.HasIndex("UserEmailAddress1");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("fa18Team22.Models.User", b =>
                {
                    b.Property<string>("EmailAddress")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired();

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("CreditCard1");

                    b.Property<string>("CreditCard2");

                    b.Property<string>("CreditCard3");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.Property<string>("UserStatus");

                    b.Property<string>("Zip")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.HasKey("EmailAddress");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("fa18Team22.Models.Book", b =>
                {
                    b.HasOne("fa18Team22.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreID");

                    b.HasOne("fa18Team22.Models.Procurement")
                        .WithMany("Books")
                        .HasForeignKey("ProcurementID");
                });

            modelBuilder.Entity("fa18Team22.Models.Order", b =>
                {
                    b.HasOne("fa18Team22.Models.User", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerEmailAddress");

                    b.HasOne("fa18Team22.Models.Promo", "Promo")
                        .WithMany("Orders")
                        .HasForeignKey("PromoID");
                });

            modelBuilder.Entity("fa18Team22.Models.OrderDetail", b =>
                {
                    b.HasOne("fa18Team22.Models.Book", "Book")
                        .WithMany("OrderDetails")
                        .HasForeignKey("BookID");

                    b.HasOne("fa18Team22.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID");
                });

            modelBuilder.Entity("fa18Team22.Models.Review", b =>
                {
                    b.HasOne("fa18Team22.Models.Book", "Book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookID");

                    b.HasOne("fa18Team22.Models.User")
                        .WithMany("ReviewsApproved")
                        .HasForeignKey("UserEmailAddress");

                    b.HasOne("fa18Team22.Models.User")
                        .WithMany("ReviewsWritten")
                        .HasForeignKey("UserEmailAddress1");
                });
#pragma warning restore 612, 618
        }
    }
}
